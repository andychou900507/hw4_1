#
# Generated by erpcgen 1.9.0 on Wed Dec  7 08:24:52 2022.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for remote_control
class remote_controlService(erpc.server.Service):
    def __init__(self, handler):
        super(remote_controlService, self).__init__(interface.Iremote_control.SERVICE_ID)
        self._handler = handler
        self._methods = {
                interface.Iremote_control.REMOTE_PUTC_ID: self._handle_remote_putc,
                interface.Iremote_control.REMOTE_LOCATE_ID: self._handle_remote_locate,
            }

    def _handle_remote_putc(self, sequence, codec):
        # Read incoming parameters.
        c = codec.read_int32()

        # Invoke user implementation of remote function.
        _result = self._handler.remote_putc(c)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.Iremote_control.SERVICE_ID,
            request=interface.Iremote_control.REMOTE_PUTC_ID,
            sequence=sequence))
        codec.write_int32(_result)

    def _handle_remote_locate(self, sequence, codec):
        # Read incoming parameters.
        column = codec.read_int32()
        row = codec.read_int32()

        # Invoke user implementation of remote function.
        self._handler.remote_locate(column, row)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.Iremote_control.SERVICE_ID,
            request=interface.Iremote_control.REMOTE_LOCATE_ID,
            sequence=sequence))


