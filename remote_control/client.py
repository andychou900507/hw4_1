#
# Generated by erpcgen 1.9.0 on Wed Dec  7 08:24:52 2022.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for remote_control
class remote_controlClient(interface.Iremote_control):
    def __init__(self, manager):
        super(remote_controlClient, self).__init__()
        self._clientManager = manager

    def remote_putc(self, c):
        # Build remote function invocation message.
        request = self._clientManager.create_request()
        codec = request.codec
        codec.start_write_message(erpc.codec.MessageInfo(
                type=erpc.codec.MessageType.kInvocationMessage,
                service=self.SERVICE_ID,
                request=self.REMOTE_PUTC_ID,
                sequence=request.sequence))
        if c is None:
            raise ValueError("c is None")
        codec.write_int32(c)

        # Send request and process reply.
        self._clientManager.perform_request(request)
        _result = codec.read_int32()
        return _result

    def remote_locate(self, column, row):
        # Build remote function invocation message.
        request = self._clientManager.create_request()
        codec = request.codec
        codec.start_write_message(erpc.codec.MessageInfo(
                type=erpc.codec.MessageType.kInvocationMessage,
                service=self.SERVICE_ID,
                request=self.REMOTE_LOCATE_ID,
                sequence=request.sequence))
        if column is None:
            raise ValueError("column is None")
        codec.write_int32(column)
        if row is None:
            raise ValueError("row is None")
        codec.write_int32(row)

        # Send request and process reply.
        self._clientManager.perform_request(request)



